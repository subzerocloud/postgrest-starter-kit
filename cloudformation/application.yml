AWSTemplateFormatVersion: 2010-09-09
Description: PostgREST Starter Kit Application Service
Parameters:
  ListenerHostNamePattern:
    Type: String
    Description: "Listen for requests on the load balancer for this domain. The  'loadbalancer.yml' stack must have already been created to use this stack template."
    Default: "*.mydomain.com"
  HasHttpsListener:
    Type: String
    Default: "No"
    AllowedValues: [ "Yes", "No" ]
    Description: "Select this if a Certificate ARN was provided when creating The 'loadbalancer.yml' stack."
  ClusterName:
    Type: String
    Description: "Name of the ECS cluster created with the wizard"
  OpenRestyImage:
    Type: String
    # Default: "openresty:latest"
    Description: "This image exists in your account's ECR repository."
  PostgrestImage:
    Type: String
    Default: "subzerocloud/postgrest"
    Description: "This image is not prepended with the ECR host because it is a standard PostgREST image."
  DesiredCount:
    Type: Number
    Default: "1"
    Description: "Attempt to start this many application instances"
  DbHost:
    Type: String
  DbPort:
    Type: String
    Default: "5432"
  DbName:
    Type: String
    Default: "app"
  DbSchema:
    Type: String
    Default: "api"
  DbUser:
    Type: String
    Default: "authenticator"
  DbPassword:
    Type: String
    Default: "authenticatorpass"
  DbAnonRole:
    Type: String
    Default: "anonymous"
  DbPool:
    Type: String
    Default: "10"
  MaxRows:
    Type: String
    Default: ""
    Description: "MAX_ROWS env var"
  PreRequest:
    Type: String
    Default: ""
    Description: "PRE_REQUEST env var"
  JwtSecret:
    Type: String
    Default: "secret"
    Description: "Plaintext"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      ListenerHostNamePattern:
        default: "Listener Host Name Pattern"
      ClusterName:
        default: "ECS Cluster Name"
      OpenRestyImage:
        default: "OpenResty Image"
      PostgrestImage:
        default: "PostgREST Image"
      DesiredCount:
        default: "Application Task Desired Count"
      HasHttpsListener:
        default: "Is load balancer serving HTTPS?"
      DbHost:
        default: "PostgreSQL Server Host Name"
      DbPort:
        default: "PostgreSQL Server Port"
      DbName:
        default: "Database Name"
      DbSchema:
        default: "Database Schema"
      DbUser:
        default: "Authenticator Database User"
      DbPassword:
        default: "Authenticator Password"
      DbAnonRole:
        default: "Anonymous Role Name"
      DbPool:
        default: "Connection Pool Size"
      MaxRows:
        default: "Default Maximum Rows Returned"
      PreRequest:
        default: "Pre Request"
      JwtSecret:
        default: "JWT Secret"
    ParameterGroups:
      - Label:
          default: "General"
        Parameters:
          - ClusterName
          - ListenerHostNamePattern
          - JwtSecret
          - DesiredCount
          - HasHttpsListener
      - Label:
          default: "Container Images"
        Parameters:
          - PostgrestImage
          - OpenRestyImage
      - Label:
          default: "Database"
        Parameters:
          - DbHost
          - DbPort
          - DbName
          - DbSchema
          - DbUser
          - DbPassword
          - DbAnonRole
      - Label:
          default: "PostgREST Settings"
        Parameters:
          - DbPool
          - MaxRows
          - PreRequest
Conditions:
  HasHttpsListener: !Equals [ !Ref HasHttpsListener, "Yes" ]
Resources:
  PgRestLogGroup:
    Type: AWS::Logs::LogGroup
  OpenRestyLogGroup:
    Type: AWS::Logs::LogGroup
  TaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: "postgrest"
          Image: !Ref PostgrestImage
          Cpu: "10"
          Memory: "100"
          Environment:
            - Name: DB_URI
              Value: !Join
                - ""
                -
                  - "postgres://"
                  - !Ref DbUser
                  - ":"
                  - !Ref DbPassword
                  - "@"
                  - !Ref DbHost
                  - ":"
                  - !Ref DbPort
                  - "/"
                  - !Ref DbName
            - Name: DB_SCHEMA
              Value: !Ref DbSchema
            - Name: DB_ANON_ROLE
              Value: !Ref DbAnonRole
            - Name: DB_POOL
              Value: !Ref DbPool
            - Name: JWT_SECRET
              Value: !Ref JwtSecret
            - Name: MAX_ROWS
              Value: !Ref MaxRows
            - Name: PRE_REQUEST
              Value: !Ref PreRequest
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: !Ref PgRestLogGroup
              awslogs-region: !Ref AWS::Region
        - Name: "openresty"
          Image: !Ref OpenRestyImage
          Cpu: "10"
          Memory: "100"
          PortMappings:
            - HostPort: "0"
              ContainerPort: "80"
              Protocol: "tcp"
          Links:
            - "postgrest:postgrest"
          Environment:
            - Name: DB_HOST
              Value: !Ref DbHost
            - Name: DB_PORT
              Value: !Ref DbPort
            - Name: DB_NAME
              Value: !Ref DbName
            - Name: DB_SCHEMA
              Value: !Ref DbSchema
            - Name: DB_USER
              Value: !Ref DbUser
            - Name: DB_PASS
              Value: !Ref DbPassword
            - Name: POSTGREST_HOST
              Value: "postgrest"
            - Name: POSTGREST_PORT
              Value: "3000"
            - Name: JWT_SECRET
              Value: !Ref JwtSecret
            - Name: DEVELOPMENT
              Value: "0"
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: !Ref OpenRestyLogGroup
              awslogs-region: !Ref AWS::Region
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: '200'
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '30'
      UnhealthyThresholdCount: 3
      VpcId:
        Fn::ImportValue:
          !Sub "${ClusterName}-Vpc"
  ListenerRuleHttp:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn:
          Ref: TargetGroup
      Conditions:
      - Field: host-header
        Values:
        - !Ref ListenerHostNamePattern
      ListenerArn:
        Fn::ImportValue:
          !Sub "${ClusterName}-HttpListener"
      Priority: 1
  ListenerRuleHttps:
    Condition: HasHttpsListener
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn:
          Ref: TargetGroup
      Conditions:
      - Field: host-header
        Values:
        - !Ref ListenerHostNamePattern
      ListenerArn:
        Fn::ImportValue:
          !Sub "${ClusterName}-HttpsListener"
      Priority: 1
  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRuleHttp
    Properties:
      Cluster: !Ref ClusterName
      DeploymentConfiguration:
        MaximumPercent: "200"
        MinimumHealthyPercent: "50"
      DesiredCount: !Ref DesiredCount
      LoadBalancers:
        - ContainerName: "openresty"
          TargetGroupArn: !Ref TargetGroup
          ContainerPort: 80
      TaskDefinition: !Ref TaskDef
      Role:
        Fn::ImportValue:
          !Sub "${ClusterName}-ServiceRole"
